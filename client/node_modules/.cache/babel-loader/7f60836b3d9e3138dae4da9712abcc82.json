{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport memoize from \"lodash.memoize\";\nimport collection from \"../../pages/collection/collection\";\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3\n};\n\nconst selectShop = state => state.shop;\n\nexport const useSelectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([useSelectCollections], collections => collections.find(collection => collection.id === [collectionUrlParam]))); // export const selectCollection = memoize((collectionUrlParam) =>\n//   createSelector(\n//     [useSelectCollections],\n//     (collections) => collections[collectionUrlParam]\n//   )\n// );","map":{"version":3,"sources":["/Users/Mubarak/Desktop/rev-clothing/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","collection","COLLECTION_ID_MAP","hats","sneakers","jackets","selectShop","state","shop","useSelectCollections","collections","selectCollection","collectionUrlParam","find","id"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,CADkB;AAExBC,EAAAA,QAAQ,EAAE,CAFc;AAGxBC,EAAAA,OAAO,EAAE;AAHe,CAA1B;;AAMA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,oBAAoB,GAAGV,cAAc,CAChD,CAACO,UAAD,CADgD,EAE/CE,IAAD,IAAUA,IAAI,CAACE,WAFiC,CAA3C;AAKP,OAAO,MAAMC,gBAAgB,GAAGX,OAAO,CAAEY,kBAAD,IACtCb,cAAc,CAAC,CAACU,oBAAD,CAAD,EAA0BC,WAAD,IACrCA,WAAW,CAACG,IAAZ,CAAkBZ,UAAD,IAAgBA,UAAU,CAACa,EAAX,KAAkB,CAACF,kBAAD,CAAnD,CADY,CADuB,CAAhC,C,CAMP;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createSelector } from \"reselect\";\nimport memoize from \"lodash.memoize\";\nimport collection from \"../../pages/collection/collection\";\n\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3\n};\n\nconst selectShop = (state) => state.shop;\n\nexport const useSelectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollection = memoize((collectionUrlParam) =>\n  createSelector([useSelectCollections], (collections) =>\n    collections.find((collection) => collection.id === [collectionUrlParam])\n  )\n);\n\n// export const selectCollection = memoize((collectionUrlParam) =>\n//   createSelector(\n//     [useSelectCollections],\n//     (collections) => collections[collectionUrlParam]\n//   )\n// );\n"]},"metadata":{},"sourceType":"module"}